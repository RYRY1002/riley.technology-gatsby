@import 'tailwindcss';
@reference "./sizes/sm.css";
@reference "./sizes/base.css";
@reference "./sizes/lg.css";

@reference "./colors/neutral.css";
@reference "./utils.css";
@reference "../global.css";

@utility prose {
  @apply prose-neutral max-sm:prose-sm sm:prose-base xl:prose-base 2xl:prose-lg;
  @layer prose {
    @variant not-not-prose {
      color: var(--tw-prose-body);
      max-width: 85ch;
      @apply mx-auto;
    }

    [class~="lead"] {
      @variant not-not-prose {
        color: var(--tw-prose-lead);
      }
    }

    a {
      @variant not-not-prose {
        color: var(--tw-prose-links);
        text-decoration: underline;
        @apply link-styling;
      }
    }

    strong {
      @variant not-not-prose {
        color: var(--tw-prose-bold);
        font-weight: 600;
      }
    }

    a strong, blockquote strong, thead th strong, a code, h1 code, h2 code, h3 code, h4 code, blockquote code, thread th code {
      @variant not-not-prose {
        color: inherit;
      }
    }

    ol {
      @variant not-not-prose {
        list-style: decimal;
      }

      > li::marker {
        @variant not-not-prose {
          font-weight: 400;
          color: var(--tw-prose-counters);
        }
      }

      &[type="A"] {
        @variant not-not-prose {
          list-style: upper-alpha;
        }
      }

      &[type="a"] {
        @variant not-not-prose {
          list-style: lower-alpha;
        }
      }

      &[type="A" s] {
        @variant not-not-prose {
          list-style: upper-alpha;
        }
      }

      &[type="a" s] {
        @variant not-not-prose {
          list-style: lower-alpha;
        }
      }

      &[type="I"] {
        @variant not-not-prose {
          list-style: upper-roman;
        }
      }

      &[type="i"] {
        @variant not-not-prose {
          list-style: lower-roman;
        }
      }

      &[type="I" s] {
        @variant not-not-prose {
          list-style: upper-roman;
        }
      }

      &[type="i" s] {
        @variant not-not-prose {
          list-style: lower-roman;
        }
      }

      &[type="1"] {
        @variant not-not-prose {
          list-style: decimal;
        }
      }
    }

    ul {
      @variant not-not-prose {
        list-style: disc;
      }

      > li::marker {
        @variant not-not-prose {
          color: var(--tw-prose-bullets);
        }
      }
    }

    dt {
      @variant not-not-prose {
        color: var(--tw-prose-headings);
        font-weight: 600;
      }
    }

    hr {
      @variant not-not-prose {
        border-color: var(--tw-prose-hr);
        border-top-width: 1;
      }
    }

    blockquote {
      @variant not-not-prose {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "\201C" "\201D" "\2018" "\2019";
      }

      code {
        @variant not-not-prose {
          color: inherit;
        }
      }
    }

    h1 {
      @variant not-not-prose {
        color: var(--tw-prose-headings);
        font-weight: 800;
      }

      strong {
        @variant not-not-prose {
          color: inherit;
          font-weight: 900;
        }
      }

      code {
        @variant not-not-prose {
          color: inherit;
        }
      }
    }

    h2 {
      @variant not-not-prose {
        color: var(--tw-prose-headings);
        font-weight: 700;
      }

      strong {
        @variant not-not-prose {
          color: inherit;
          font-weight: 800;
        }
      }

      code {
        @variant not-not-prose {
          color: inherit;
        }
      }
    }
    
    h3 {
      @variant not-not-prose {
        color: var(--tw-prose-headings);
        font-weight: 600;
      }

      strong {
        @variant not-not-prose {
          color: inherit;
          font-weight: 700;
        }
      }

      code {
        @variant not-not-prose {
          color: inherit;
        }
      }
    }

    h4 {
      @variant not-not-prose {
        color: var(--tw-prose-headings);
        font-weight: 600;
      }

      strong {
        @variant not-not-prose {
          color: inherit;
          font-weight: 700;
        }
      }

      code {
        @variant not-not-prose {
          color: inherit;
        }
      }
    }

    picture {
      @variant not-not-prose {
        display: block;
      }
    }

    kbd {
      @variant not-not-prose {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      }
    }

    code {
      @variant not-not-prose {
        color: var(--tw-prose-code);
        background-color: var(--tw-prose-pre-bg);
        font-weight: 400;
        padding: 0.2em 0.4em;
      }
    } 

    pre, span.shiki {
      @variant not-not-prose {
        color: var(--tw-prose-pre-code) !important;
        background-color: var(--tw-prose-pre-bg) !important;
        overflow-x: auto;
        font-weight: 400;
        line-height: 1.25;
        @apply font-mono;
      }

      > code {
        @variant not-not-prose {
          background-color: transparent;
          border-width: 0;
          border-radius: 0;
          padding: 0;
          color: inherit;
        }

        > span.line {
          > span {
            @variant not-not-prose {
              @variant dark {
                color: var(--shiki-dark) !important;
              }
            }
          }

          &.highlighted:not(.diff)::after {
            @variant not-not-prose {
              content: ' ';
              width: calc(100% - 4px);
              position: absolute;
              box-shadow: -4px 0 rgba(255,255,255,0.5);
              @apply left-1 bg-white/10 select-none;
            }
          }

          &.diff {
            &:not(.highlighted)::after {
              @variant not-not-prose {
                content: ' ';
                width: calc(100% - 4px);
                position: absolute;
                @apply left-1 select-none;
              }
            }

            &.diff.add:not(.highlighted)::after {
              @variant not-not-prose {
                box-shadow: -4px 0 rgba(0,255,60,0.5);
                @apply bg-[rgb(0,255,60)]/20;
              }
            }

            &.diff.remove:not(.highlighted)::after {
              @variant not-not-prose {
                box-shadow: -4px 0 rgba(255,0,20,0.5);
                @apply bg-[rgb(255,0,20)]/20;
              }
            }
          }
        }
      }

      &.line-numbers > code > span.line {
        @variant not-not-prose {
          content: counter(line-number);
          counter-increment: line-number;
          color: gray;
          @apply select-none pr-4;
        }
      }
    }

    table {
      @variant not-not-prose {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
      }
    }

    thead {
      @variant not-not-prose {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
      }

      th {
        @variant not-not-prose {
          color: var(--tw-prose-headings);
          font-weight: 600;
          vertical-align: bottom;
        }
      }
    }

    tbody tr {
      @variant not-not-prose {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
      }

      &:last-child {
        @variant not-not-prose {
          border-bottom-width: 0;
        }
      }
    }

    tbody td {
      @variant not-not-prose {
        vertical-align: baseline;
      }
    }

    tfoot {
      @variant not-not-prose {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
      }

      td {
        @variant not-not-prose {
          vertical-align: top;
        }
      }
    }

    th, td {
      @variant not-not-prose {
        text-align: start;
      }
    }
    
    figcaption {
      @variant not-not-prose {
        color: var(--tw-prose-captions);
      }
    }
  }
}